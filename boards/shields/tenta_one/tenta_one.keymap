#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/*
Ctrl+Z Undo
Ctrl+Y Redo
Ctrl+X Cut
Ctrl+V Paste
Ctrl+T Transform

Ctrl+D Deselect
Shift+F7 Invert selected area 

Shift+Z Flip Horizontal
Ctrl+Alt+0 100%
Ctrl+Alt+R Reset Rotation (Custom)

Alt+] Layer Above
Alt+[ Layer Below

- Rotate Left
^ Rotate Right

Ctrl+; Zoom in
Ctrl+- Zoom out

Options

[ Select Smaller  
] Select Larger
X Switch main and sub colour

Tools
H Hand
R Rotate
P Pen,Pencil
E Eraser
/ Zoom
*/

#define LAYER_COLOR_0 RGB_COLOR_HSB(270, 100, 25) // Ina Purple
#define LAYER_COLOR_1 RGB_COLOR_HSB(315, 100, 25) // Pink
#define LAYER_COLOR_2 RGB_COLOR_HSB(  0, 100, 25) // Red 
#define LAYER_COLOR_3 RGB_COLOR_HSB( 30, 100, 25) // Orange
#define LAYER_COLOR_4 RGB_COLOR_HSB(120, 100, 25) // Green
#define LAYER_COLOR_5 RGB_COLOR_HSB(190, 100, 25) // Sky Blue
#define LAYER_COLOR_6 RGB_COLOR_HSB(220, 100, 25) // Blue

/ {
    macros {
        layer_one_underglow: layer_one_underglow {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 1>
                , <&macro_tap &rgb_ug LAYER_COLOR_1>
                , <&macro_pause_for_release>
                , <&macro_release &mo 1>
                , <&macro_tap &rgb_ug LAYER_COLOR_0>;
        };

        layer_two_underglow: layer_two_underglow {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 2>
                , <&macro_tap &rgb_ug LAYER_COLOR_2>
                , <&macro_pause_for_release>
                , <&macro_release &mo 2>
                , <&macro_tap &rgb_ug LAYER_COLOR_0>;
        };

        layer_three_underglow: layer_three_underglow {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 3>
                , <&macro_tap &rgb_ug LAYER_COLOR_3>
                , <&macro_pause_for_release>
                , <&macro_release &mo 3>
                , <&macro_tap &rgb_ug LAYER_COLOR_0>;
        };

        layer_four_underglow: layer_four_underglow {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 4>
                , <&macro_tap &rgb_ug LAYER_COLOR_4>
                , <&macro_pause_for_release>
                , <&macro_release &mo 4>
                , <&macro_tap &rgb_ug LAYER_COLOR_0>;
        };

        layer_five_underglow: layer_five_underglow {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 5>
                , <&macro_tap &rgb_ug LAYER_COLOR_5>
                , <&macro_pause_for_release>
                , <&macro_release &mo 5>
                , <&macro_tap &rgb_ug LAYER_COLOR_0>;
        };

        layer_six_underglow: layer_six_underglow {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 6>
                , <&macro_tap &rgb_ug LAYER_COLOR_6>
                , <&macro_pause_for_release>
                , <&macro_release &mo 6>
                , <&macro_tap &rgb_ug LAYER_COLOR_0>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        
        combo_layer_five_underglow {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&layer_five_underglow>;
        };
        
        combo_layer_six_underglow {
            timeout-ms = <50>;
            key-positions = <8 10>;
            bindings = <&layer_six_underglow>;
        };
    };
};

/ {
    behaviors {
        bt_encoder: bt_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer { // Layer 0
            // -------------------------------------------------
            // |    ESC    |     /     |     H     |     P    |
            // |  LAYER 1  |  LCTRL+T  | LSHIFT+Z  | LCTRL+Z  |
            // |  LAYER 2  |  LAYER 3  |  LAYER 4  | LCTRL+LALT+R |
            bindings = <
                &kp ESC                    &kp SLASH                     &kp H      &kp P
                &layer_one_underglow       &kp LC(T)                 &kp LS(Z)  &kp LC(Z)
                &layer_two_underglow       &layer_three_underglow    &layer_four_underglow &kp LC(LA(R))
            >;

            sensor-bindings = <&inc_dec_kp CARET MINUS>;
        };

        lower_layer { // Layer 1
            // -------------------------------------------------
            // |    ESC    |     M     |     S     |     D    |
            // |  LAYER 1  |  LCTRL+D  |  LCTRL+X  | LCTRL+V  |
            // |  LAYER 2  |  LAYER 3  |  LAYER 4  |
            bindings = <
                &kp ESC     &kp M        &kp S      &kp D
                &layer_one_underglow       &kp LC(D)    &kp LC(X)      &kp LC(V)
                &layer_two_underglow       &layer_three_underglow    &layer_four_underglow &kp LC(LA(0))
            >;

            sensor-bindings = <&inc_dec_kp LC(SEMI) LC(MINUS)>;
        };
        
        upper_layer { // Layer 2
            // -------------------------------------------------
            // |    ESC    |     A     |     G     |     P    |
            // |  LAYER 1  |     Z     |     X     | LCTRL+Y  |
            // |  LAYER 2  |  LAYER 3  |  LAYER 4  |
            bindings = <
                &kp ESC     &kp A        &kp G      &kp P
                &layer_one_underglow       &kp Z        &kp X      &kp LC(Y)
                &layer_two_underglow       &layer_three_underglow    &layer_four_underglow &none
            >;

            sensor-bindings = <&inc_dec_kp RBKT LBKT>;
        };

        layer_three { // Layer 3
            // -------------------------------------------------
            // |    ESC    |   NONE    |   NONE    |   NONE    |
            // |  LAYER 1  |  LCTRL+S  |   NONE    |   NONE    |
            // |  LAYER 2  |  LAYER 3  |  LAYER 4  |
            bindings = <
                &kp ESC     &none        &none      &none
                &layer_one_underglow       &kp LC(S)        &none      &none
                &layer_two_underglow       &layer_three_underglow    &layer_four_underglow &none
            >;

            sensor-bindings = <&inc_dec_kp &none &none>;
        };

        layer_four { // Layer 4
            // -------------------------------------------------
            // |    ESC    |   NONE    |   NONE    |   NONE    |
            // |  LAYER 1  |   NONE    |   NONE    |   NONE    |
            // |  LAYER 2  |  LAYER 3  |  LAYER 4  |
            bindings = <
                &kp ESC     &none        &none      &none
                &layer_one_underglow       &none        &none      &none
                &layer_two_underglow       &layer_three_underglow    &layer_four_underglow &none
            >;

            sensor-bindings = <&inc_dec_kp &none &none>;
        };

        layer_five { // Layer 5
            // -------------------------------------------------
            // |    ESC    |   NONE    |   NONE    |   NONE    |
            // |  LAYER 1  |   NONE    |  RBG_TOG  |   NONE    |
            // |  LAYER 2  |  LAYER 3  |  LAYER 4  |
            bindings = <
                &kp ESC     &none        &none      &none
                &layer_one_underglow       &none        &rgb_ug RGB_TOG      &none
                &layer_two_underglow       &layer_three_underglow    &layer_four_underglow &none
            >;

        // Not actually useful because it gets overwritten by RGB_COLOR_HSB
        sensor-bindings = <&inc_dec_kp &none &none>;
        };

        layer_six { // Layer 6
            // -------------------------------------------------
            // | BT CLEAR  |  OUT_BLE  |  OUT_USB  |     B     |
            // |  LAYER 1  | BT PROF 1 | BT PROF 2 | BT PROF 3 |
            // |  LAYER 2  |  LAYER 3  |  LAYER 4  |
            bindings = <    
                &bt BT_CLR     &out OUT_BLE       &out OUT_USB     &kp B
                &layer_one_underglow       &bt BT_SEL 0        &bt BT_SEL 1      &bt BT_SEL 2
                &layer_two_underglow       &layer_three_underglow    &layer_four_underglow &none
            >;

            sensor-bindings = <&bt_encoder>;
        };
    };
 };